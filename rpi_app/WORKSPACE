load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Rules rust
http_archive(
    name = "io_bazel_rules_rust",
    sha256 = "c82118824b2448b77146f1dae97b6eaa717babedad0822aca4879f3cbbf2b7b5",
    strip_prefix = "rules_rust-3228ccd3814c2ad0d7307d2f87fb8ff9616149d7",
    urls = [
        # Master branch as of 2018-12-11
        "https://github.com/bazelbuild/rules_rust/archive/3228ccd3814c2ad0d7307d2f87fb8ff9616149d7.tar.gz",
    ],
)

http_archive(
    name = "bazel_skylib",
    sha256 = "eb5c57e4c12e68c0c20bc774bfbc60a568e800d025557bc4ea022c6479acc867",
    strip_prefix = "bazel-skylib-0.6.0",
    url = "https://github.com/bazelbuild/bazel-skylib/archive/0.6.0.tar.gz",
)

load("@io_bazel_rules_rust//:workspace.bzl", "bazel_version")

bazel_version(name = "bazel_version")

local_repository(
    name = "minimal_linux_bazel",
    path = "../",
)

# minimal linux bazel dependencies
load("@minimal_linux_bazel//:fetch.bzl", "fetch_dependencies")

fetch_dependencies()

http_archive(
    name = "raspberrypi_firmware",
    build_file_content = """ 
filegroup(
    name = "boot_files",
    srcs = glob(["boot/*"], exclude = ["boot/overlays"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "overlays",
    srcs = glob(["boot/overlays/**/*"]),
    visibility = ["//visibility:public"],
)

genrule(
    name = "rpi2-qemu-files",
    srcs = ["boot/kernel7.img", "boot/bcm2709-rpi-2-b.dtb"],
    visibility = ["//visibility:public"],
    outs = ["kernel7.img", "rpi2.dtb"],
    cmd = "cp $(location boot/kernel7.img) $(location kernel7.img) && \
         cp $(location boot/bcm2709-rpi-2-b.dtb) $(location rpi2.dtb)",
)
    """,
    sha256 = "6b6db5f15c400bc1224266fd44238dd9b2479fd09f8a55e36ccdac2120632f8f",
    strip_prefix = "firmware-1.20190215",
    url = "https://github.com/raspberrypi/firmware/archive/1.20190215.tar.gz",
)

load("//raze:crates.bzl", "raze_fetch_remote_crates")

raze_fetch_remote_crates()

http_archive(
    name = "libx11",
    build_file_content = """ 
cc_library(
    name = "libx11",
    srcs = ["usr/lib/libX11.a"],
    visibility = ["//visibility:public"],
    deps = ["@libxcb"],
)
    """,
    sha256 = "01026d22ebeebfed108de12bbd6540a9ad6b96e939447c64ebe0d0e5c5716b9b",
    type = "tar.gz",
    url = "http://dl-cdn.alpinelinux.org/alpine/v3.9/main/armv7/libx11-dev-1.6.7-r0.apk",
)

http_archive(
    name = "libxcb",
    build_file_content = """ 
cc_library(
    name = "libxcb",
    srcs = ["usr/lib/libxcb.a"],
    visibility = ["//visibility:public"],
    deps = ["@libxau", "@libxdmcp"],
)
    """,
    sha256 = "52bd54c03ad6a13a66187c212d1812ec7d495810cd7613bfd04466b7e9097d9c",
    type = "tar.gz",
    url = "http://dl-cdn.alpinelinux.org/alpine/v3.9/main/armv7/libxcb-dev-1.13-r2.apk",
)

http_archive(
    name = "libxau",
    build_file_content = """ 
cc_library(
    name = "libxau",
    srcs = ["usr/lib/libXau.a"],
    visibility = ["//visibility:public"],
)
    """,
    type = "tar.gz",
    url = "http://dl-cdn.alpinelinux.org/alpine/v3.9/main/armv7/libxau-dev-1.0.8-r3.apk",
)

http_archive(
    name = "libxdmcp",
    build_file_content = """ 
cc_library(
    name = "libxdmcp",
    srcs = ["usr/lib/libXdmcp.a"],
    visibility = ["//visibility:public"],
)
    """,
    sha256 = "aebedf4afda9a6a2f27b7a356fba5a8e96961860a63a25fde95fc8d01502eb89",
    type = "tar.gz",
    url = "http://dl-cdn.alpinelinux.org/alpine/v3.9/main/armv7/libxdmcp-dev-1.1.2-r5.apk",
)
